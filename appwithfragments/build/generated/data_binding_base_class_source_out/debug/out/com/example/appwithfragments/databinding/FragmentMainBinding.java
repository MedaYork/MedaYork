// Generated by view binder compiler. Do not edit!
package com.example.appwithfragments.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appwithfragments.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonStart;

  @NonNull
  public final ConstraintLayout indexView;

  @NonNull
  public final TextView subtitle1;

  @NonNull
  public final TextView subtitle2;

  @NonNull
  public final TextView title1;

  @NonNull
  public final TextView title2;

  private FragmentMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonStart,
      @NonNull ConstraintLayout indexView, @NonNull TextView subtitle1, @NonNull TextView subtitle2,
      @NonNull TextView title1, @NonNull TextView title2) {
    this.rootView = rootView;
    this.buttonStart = buttonStart;
    this.indexView = indexView;
    this.subtitle1 = subtitle1;
    this.subtitle2 = subtitle2;
    this.title1 = title1;
    this.title2 = title2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_start;
      Button buttonStart = ViewBindings.findChildViewById(rootView, id);
      if (buttonStart == null) {
        break missingId;
      }

      ConstraintLayout indexView = (ConstraintLayout) rootView;

      id = R.id.subtitle1;
      TextView subtitle1 = ViewBindings.findChildViewById(rootView, id);
      if (subtitle1 == null) {
        break missingId;
      }

      id = R.id.subtitle2;
      TextView subtitle2 = ViewBindings.findChildViewById(rootView, id);
      if (subtitle2 == null) {
        break missingId;
      }

      id = R.id.title1;
      TextView title1 = ViewBindings.findChildViewById(rootView, id);
      if (title1 == null) {
        break missingId;
      }

      id = R.id.title2;
      TextView title2 = ViewBindings.findChildViewById(rootView, id);
      if (title2 == null) {
        break missingId;
      }

      return new FragmentMainBinding((ConstraintLayout) rootView, buttonStart, indexView, subtitle1,
          subtitle2, title1, title2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
